package com.example.demo;

public class LeetCodeProblemSolve {
	
	public static int hammingDistance(int x, int y) {
        int xor = x^y;
        int count = 0;
        while (xor > 0) {
            if ((xor&1) == 1) {
                count ++;
            }
            xor = xor >> 1;
        }
        return count;
    }
	public static int[] twoSum(int[] nums, int target) {
		int[] result = new int[2];
		for (int i = 0; i < nums.length; i++) {			 
			for (int j = i+1; j < nums.length; j++) {
				if(nums[i] + nums[j] == target) {
					result[0] = i; 
					result[1] = j;
					return result;
				}
			}
		}
		return nums;
    }
	
	public static ListNode addTwoNumbers(ListNode node1, ListNode node2) {
		return node2;
		
	}

	public static void main(String[] args) {
		
		int a = 1, b=4;
		hammingDistance(a, b);	

	}
		public class ListNode {
		     int val;
		     ListNode next;
		     ListNode(int x) { val = x; }
	}

}


